// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GuessItem renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GuessItem />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        "Guess is ",
        <span
          className="GuessItem-span"
/>,
        " and we must search for the ",
        <span
          className="GuessItem-span"
/>,
        " ",
        "number!",
      ],
    },
    "ref": null,
    "rendered": Array [
      "Guess is ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
          "className": "GuessItem-span",
        },
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      " and we must search for the ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
          "className": "GuessItem-span",
        },
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      " ",
      "number!",
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "Guess is ",
          <span
            className="GuessItem-span"
/>,
          " and we must search for the ",
          <span
            className="GuessItem-span"
/>,
          " ",
          "number!",
        ],
      },
      "ref": null,
      "rendered": Array [
        "Guess is ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "GuessItem-span",
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        " and we must search for the ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "GuessItem-span",
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        " ",
        "number!",
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
